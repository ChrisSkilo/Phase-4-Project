{"ast":null,"code":"var _jsxFileName = \"/home/chris/development/code/Mod4/Phase-4-Project/client/src/Pages/SalaryForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Navbar from '../Components/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SalaryForm = ({\n  onCalculateSalary\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    employee_id: \"\",\n    month: \"\",\n    year: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    // Clear validation errors when the user starts typing\n    setErrors({\n      ...errors,\n      [name]: \"\"\n    });\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Validate form fields\n    const validationErrors = validateForm(formData);\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    try {\n      // Make a POST request to your backend server\n      const response = await fetch(\"/salaries\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to calculate and save salary\");\n      }\n\n      // Optionally, you can handle the successful submission here\n      console.log(\"Salary calculated and saved successfully!\");\n\n      // Call the parent component's onCalculateSalary callback with the new salary data\n      onCalculateSalary(response.data);\n\n      // Optionally, you can reset the form after submission\n      setFormData({\n        employee_id: \"\",\n        month: \"\",\n        year: \"\"\n      });\n    } catch (error) {\n      console.error(\"Error:\", error.message);\n    }\n  };\n  const validateForm = async data => {\n    const errors = {};\n\n    // Validate employee ID\n    if (!data || !data.employee_id) {\n      errors.employee_id = \"Employee ID is required.\";\n    } else {\n      // Validate that the employee with the provided ID exists\n      try {\n        const response = await fetch(`/employees/${data.employee_id}`);\n        if (!response.ok) {\n          errors.employee_id = \"Employee with this ID does not exist.\";\n        }\n      } catch (error) {\n        console.error(\"Error checking employee existence:\", error);\n      }\n    }\n\n    // Validate month and year\n    if (!data || !data.month || !data.year) {\n      errors.date = \"Month and year are required.\";\n    } else {\n      // Validate that the provided month and year are not in the future\n      const currentMonth = new Date().getMonth() + 1; // Months are zero-indexed\n      const currentYear = new Date().getFullYear();\n      if (Number(data.year) > currentYear || Number(data.year) === currentYear && Number(data.month) > currentMonth) {\n        errors.date = \"Invalid month and year.\";\n      }\n    }\n    return errors;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Employee ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"employee_id\",\n          value: formData.employee_id,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), errors.employee_id && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.employee_id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Month:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"month\",\n          value: formData.month,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), errors.date && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Year:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"year\",\n          value: formData.year,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), errors.date && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Calculate Salary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(SalaryForm, \"ALs1XQBjKgITcf3n6SNbXQzLL7c=\");\n_c = SalaryForm;\nexport default SalaryForm;\nvar _c;\n$RefreshReg$(_c, \"SalaryForm\");","map":{"version":3,"names":["React","useState","Navbar","jsxDEV","_jsxDEV","SalaryForm","onCalculateSalary","_s","formData","setFormData","employee_id","month","year","errors","setErrors","handleChange","event","name","value","target","handleSubmit","preventDefault","validationErrors","validateForm","Object","keys","length","response","fetch","method","headers","body","JSON","stringify","ok","Error","console","log","data","error","message","date","currentMonth","Date","getMonth","currentYear","getFullYear","Number","children","onSubmit","type","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/home/chris/development/code/Mod4/Phase-4-Project/client/src/Pages/SalaryForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from '../Components/Navbar'\n\nconst SalaryForm = ({ onCalculateSalary }) => {\n  const [formData, setFormData] = useState({\n    employee_id: \"\",\n    month: \"\",\n    year: \"\",\n  });\n\n  const [errors, setErrors] = useState({});\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({ ...formData, [name]: value });\n    // Clear validation errors when the user starts typing\n    setErrors({ ...errors, [name]: \"\" });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    // Validate form fields\n    const validationErrors = validateForm(formData);\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n\n    try {\n      // Make a POST request to your backend server\n      const response = await fetch(\"/salaries\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to calculate and save salary\");\n      }\n\n      // Optionally, you can handle the successful submission here\n      console.log(\"Salary calculated and saved successfully!\");\n\n      // Call the parent component's onCalculateSalary callback with the new salary data\n      onCalculateSalary(response.data);\n\n      // Optionally, you can reset the form after submission\n      setFormData({\n        employee_id: \"\",\n        month: \"\",\n        year: \"\",\n      });\n    } catch (error) {\n      console.error(\"Error:\", error.message);\n    }\n  };\n  const validateForm = async (data) => {\n    const errors = {};\n  \n    // Validate employee ID\n    if (!data || !data.employee_id) {\n      errors.employee_id = \"Employee ID is required.\";\n    } else {\n      // Validate that the employee with the provided ID exists\n      try {\n        const response = await fetch(`/employees/${data.employee_id}`);\n        if (!response.ok) {\n          errors.employee_id = \"Employee with this ID does not exist.\";\n        }\n      } catch (error) {\n        console.error(\"Error checking employee existence:\", error);\n      }\n    }\n  \n    // Validate month and year\n    if (!data || !data.month || !data.year) {\n      errors.date = \"Month and year are required.\";\n    } else {\n      // Validate that the provided month and year are not in the future\n      const currentMonth = new Date().getMonth() + 1; // Months are zero-indexed\n      const currentYear = new Date().getFullYear();\n      if (Number(data.year) > currentYear || (Number(data.year) === currentYear && Number(data.month) > currentMonth)) {\n        errors.date = \"Invalid month and year.\";\n      }\n    }\n  \n    return errors;\n  };\n  \n  \n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Employee ID:\n          <input\n            type=\"number\"\n            name=\"employee_id\"\n            value={formData.employee_id}\n            onChange={handleChange}\n            required\n          />\n          {errors.employee_id && <span className=\"error\">{errors.employee_id}</span>}\n        </label>\n\n        <label>\n          Month:\n          <input\n            type=\"text\"\n            name=\"month\"\n            value={formData.month}\n            onChange={handleChange}\n            required\n          />\n          {errors.date && <span className=\"error\">{errors.date}</span>}\n        </label>\n\n        <label>\n          Year:\n          <input\n            type=\"text\"\n            name=\"year\"\n            value={formData.year}\n            onChange={handleChange}\n            required\n          />\n          {errors.date && <span className=\"error\">{errors.date}</span>}\n        </label>\n\n        <button type=\"submit\">Calculate Salary</button>\n      </form>\n    </div>\n  );\n};\n\nexport default SalaryForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}