{"ast":null,"code":"var _jsxFileName = \"/home/chris/development/code/Mod4/Phase-4-Project/client/src/Pages/AttendanceForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Navbar from '../Components/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AttendanceForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    employee_id: \"\",\n    date: \"\",\n    hours_worked: \"\",\n    leave_taken: false\n  });\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    // Clear validation errors when the user starts typing\n    setErrors({\n      ...errors,\n      [name]: \"\"\n    });\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Validate form fields\n    const validationErrors = await validateForm(formData);\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    try {\n      // Make a POST request to your backend server\n      const response = await fetch(\"/attendance\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to submit attendance\");\n      }\n\n      // Optionally, you can handle the successful submission here\n      console.log(\"Attendance submitted successfully!\");\n\n      // Optionally, you can reset the form after submission\n      setFormData({\n        employee_id: \"\",\n        date: \"\",\n        hours_worked: \"\",\n        leave_taken: false\n      });\n    } catch (error) {\n      console.error(\"Error:\", error.message);\n    }\n  };\n  const validateForm = async data => {\n    const errors = {};\n\n    // Validate employee ID\n    if (!data.employee_id) {\n      errors.employee_id = \"Employee ID is required.\";\n    } else {\n      // Validate that the employee with the provided ID exists\n      setLoading(true);\n      try {\n        const response = await fetch(`/employees/${data.employee_id}`);\n        if (!response.ok) {\n          errors.employee_id = \"Employee with this ID does not exist.\";\n        }\n      } catch (error) {\n        console.error(\"Error checking employee existence:\", error);\n        errors.employee_id = \"Error checking employee existence.\";\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    // Validate date\n    if (!data.date) {\n      errors.date = \"Date is required.\";\n    } else {\n      const currentDate = new Date().toISOString().split(\"T\")[0];\n      if (data.date > currentDate) {\n        errors.date = \"Attendance date cannot be in the future.\";\n      }\n    }\n\n    // Validate hours worked\n    if (isNaN(data.hours_worked) || data.hours_worked < 0 || data.hours_worked > 9) {\n      errors.hours_worked = \"Invalid hours worked. It should be between 0 and 9.\";\n    }\n    return errors;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Employee ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"employee_id\",\n          value: formData.employee_id,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loading\",\n          children: \"Checking employee existence...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), errors.employee_id && !loading && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.employee_id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          value: formData.date,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this), errors.date && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Hours Worked:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"hours_worked\",\n          value: formData.hours_worked,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this), errors.hours_worked && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.hours_worked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Leave Taken:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"leave_taken\",\n          value: formData.leave_taken,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: false,\n            children: \"False\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: true,\n            children: \"True\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Attendance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n};\n_s(AttendanceForm, \"XezkPm9fhiQD1RTAJaDDKbSrXbU=\");\n_c = AttendanceForm;\nexport default AttendanceForm;\nvar _c;\n$RefreshReg$(_c, \"AttendanceForm\");","map":{"version":3,"names":["React","useState","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","AttendanceForm","_s","formData","setFormData","employee_id","date","hours_worked","leave_taken","errors","setErrors","loading","setLoading","handleChange","event","name","value","target","handleSubmit","preventDefault","validationErrors","validateForm","Object","keys","length","response","fetch","method","headers","body","JSON","stringify","ok","Error","console","log","error","message","data","currentDate","Date","toISOString","split","isNaN","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","className","_c","$RefreshReg$"],"sources":["/home/chris/development/code/Mod4/Phase-4-Project/client/src/Pages/AttendanceForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from '../Components/Navbar';\n\n\nconst AttendanceForm = () => {\n  const [formData, setFormData] = useState({\n    employee_id: \"\",\n    date: \"\",\n    hours_worked: \"\",\n    leave_taken: false,\n  });\n\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({ ...formData, [name]: value });\n    // Clear validation errors when the user starts typing\n    setErrors({ ...errors, [name]: \"\" });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    // Validate form fields\n    const validationErrors = await validateForm(formData);\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n\n    try {\n      // Make a POST request to your backend server\n      const response = await fetch(\"/attendance\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to submit attendance\");\n      }\n\n      // Optionally, you can handle the successful submission here\n      console.log(\"Attendance submitted successfully!\");\n\n      // Optionally, you can reset the form after submission\n      setFormData({\n        employee_id: \"\",\n        date: \"\",\n        hours_worked: \"\",\n        leave_taken: false,\n      });\n    } catch (error) {\n      console.error(\"Error:\", error.message);\n    }\n  };\n\n  const validateForm = async (data) => {\n    const errors = {};\n\n    // Validate employee ID\n    if (!data.employee_id) {\n      errors.employee_id = \"Employee ID is required.\";\n    } else {\n      // Validate that the employee with the provided ID exists\n      setLoading(true);\n      try {\n        const response = await fetch(`/employees/${data.employee_id}`);\n        if (!response.ok) {\n          errors.employee_id = \"Employee with this ID does not exist.\";\n        }\n      } catch (error) {\n        console.error(\"Error checking employee existence:\", error);\n        errors.employee_id = \"Error checking employee existence.\";\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    // Validate date\n    if (!data.date) {\n      errors.date = \"Date is required.\";\n    } else {\n      const currentDate = new Date().toISOString().split(\"T\")[0];\n      if (data.date > currentDate) {\n        errors.date = \"Attendance date cannot be in the future.\";\n      }\n    }\n\n    // Validate hours worked\n    if (isNaN(data.hours_worked) || data.hours_worked < 0 || data.hours_worked > 9) {\n      errors.hours_worked = \"Invalid hours worked. It should be between 0 and 9.\";\n    }\n\n    return errors;\n  };\n\n  return (\n    <>\n     <Navbar />\n     <form onSubmit={handleSubmit}>\n      <label>\n        Employee ID:\n        <input\n          type=\"number\"\n          name=\"employee_id\"\n          value={formData.employee_id}\n          onChange={handleChange}\n          required\n        />\n        {loading && <span className=\"loading\">Checking employee existence...</span>}\n        {errors.employee_id && !loading && <span className=\"error\">{errors.employee_id}</span>}\n      </label>\n\n      <label>\n        Date:\n        <input\n          type=\"date\"\n          name=\"date\"\n          value={formData.date}\n          onChange={handleChange}\n          required\n        />\n        {errors.date && <span className=\"error\">{errors.date}</span>}\n      </label>\n\n      <label>\n        Hours Worked:\n        <input\n          type=\"number\"\n          name=\"hours_worked\"\n          value={formData.hours_worked}\n          onChange={handleChange}\n          required\n        />\n        {errors.hours_worked && <span className=\"error\">{errors.hours_worked}</span>}\n      </label>\n\n      <label>\n        Leave Taken:\n        <select\n          name=\"leave_taken\"\n          value={formData.leave_taken}\n          onChange={handleChange}\n        >\n          <option value={false}>False</option>\n          <option value={true}>True</option>\n        </select>\n      </label>\n\n      <button type=\"submit\">Submit Attendance</button>\n    </form>\n   </>\n  );\n};\n\nexport default AttendanceForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}